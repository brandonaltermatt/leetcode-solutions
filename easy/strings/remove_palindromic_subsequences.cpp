/*
https://leetcode.com/problems/remove-palindromic-subsequences/
You are given a string s consisting only of letters 'a' and 'b'. 
In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.
A string is a subsequence of a given string if it is generated by
deleting some characters of a given string without changing its order. 
Note that a subsequence does not necessarily need to be contiguous.
*/

using namespace std;
#include <string>

/*  
Note: a subarray must be consecutive, a subsequence does not.
So return 0 if string is empty, return 1 if string is only a or b,
or return 2 if string has a and b.
*/
class Solution {
public:
    int removePalindromeSub(string s) {
        return 2- (s == string(s.rbegin(), s.rend())) - s.empty();
    }
};